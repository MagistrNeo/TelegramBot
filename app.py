import json
from easyocr import Reader
from io import BytesIO
from PIL import Image
import requests
import telebot
from telebot import types
from difflib import SequenceMatcher
import time
from itertools import islice
bot = telebot.TeleBot('6944064816:AAG6xP23JRAeUsYIarV0-p_XgLIBS7SjPO8')
bot.delete_webhook()
limit,flagdict,bladict,mesdict,tdict, ldict, flagdict2, timed, hdict = dict(),dict(),dict(),dict(),dict(),dict(),dict(),dict(),dict()

def namecheck(text:str, titl:list, q:int) -> bool:
  for j in titl:
    for i in range(8):
      if SequenceMatcher(None, text[i], j).ratio() > 0.34:
        return set(tdict[q][j].split())
  return ()

  
word1 = {'–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª'}
word2 = {'You joined this channel'}
flag = True

def checklink(x,q):
  global mesdict
  try:
    if 'https' in x:
      x = x.replace('https://t.me/','@')
    bot.get_chat_member_count(x)
  except:
    return False
  else:
    mesdict[q] = x
    return True

@bot.message_handler(content_types=["text", "audio", "document", "photo", "sticker", "video", "video_note", "voice", "location", "contact",
                 "new_chat_members", "left_chat_member", "new_chat_title", "new_chat_photo", "delete_chat_photo",
                 "group_chat_created", "supergroup_chat_created", "channel_chat_created", "migrate_to_chat_id",
                 "migrate_from_chat_id", "pinned_message", "animation"])
def get_text_messages(message):
  global flagdict, mesdict, tdict, bladict, ldict, limit, hdict, history
  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  itembtn = types.KeyboardButton('–ü—Ä–∞–≤–∏–ª–∞')
  markup.add(itembtn)
  x = message.text
  y = message.id
  numb = message.chat.id
  name = message.from_user.first_name
  surname = message.from_user.last_name
  q = message.from_user.id
  if name == None: name = ''
  if surname == None: surname = ''
  flagdict[q] = True if q not in flagdict else flagdict[q]
  if q in timed and time.time() - timed[q] > 600: flagdict[q] = True
  if checklink(x,q) and flagdict[q]:
      if q not in limit:
        with open('hist.json') as l:
            history = json.load(l)
        with open('Mat.txt') as f:
          links = f.read().split()[::-1]
          links = sorted(set(links),key=links.index)
        if str(q) not in history: 
            ldict[q] = set(links[:3])
        else:
            ldict[q] = set(islice((i for i in links if i not in history[str(q)]),3))
        tdict[q] = {bot.get_chat(i).title:i for i in ldict[q]}
        linkstosub2 = ''.join('. '.join(str(i) for i in j) + '\n' for j in enumerate(ldict[q],start = 1))
        #bot.delete_message(chat_id=numb, message_id=y)
        hdict[q] = list(ldict[q])
        bot.send_message(numb, f"{name} {surname}, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —ç—Ç–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ –∑–∞ 10 –º–∏–Ω—É—Ç.\n{linkstosub2}",reply_markup=markup)
        flagdict[q] = False
        mesdict[q] = message.text
        timed[q] = time.time()
      else:
        bot.delete_message(message.chat.id,message.message_id)
        bot.send_message(numb, f"{name} {surname}, –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–∏ 3 —á—É–∂–∏–µ —Å—Å—ã–ª–∫–∏, –¥–æ–∂–¥–∏—Ç–µ—Å—å!",reply_markup=markup)
        
  elif flagdict[q] == False and (message.photo != None):
      try:
          file_id = message.photo[-1].file_id
          file_path = bot.get_file(file_id).file_path
          l = f"https://api.telegram.org/file/bot{bot.token}/{file_path}"
      except Exception as er:
        print(er)
        l = message.text
      imglink = requests.get(l,stream=True).content
      bot.delete_message(message.chat.id,message.message_id)
      img = Image.open(BytesIO(imglink))
      reader = Reader(["ru","en"], gpu = False, verbose = False)
      text = reader.readtext(img,detail = 0)
      settext = set(text)
      strtext = str(text).lower()
      bladict[q] = namecheck(text,tdict[q],q)
      print(bladict[q])
      if any(bladict[q]) and ((len(word2&settext) >= len(word2) - 1 or "MUTE" in strtext) or (len(word1&settext) >= len(word1) - 1) or '–æ—Ç–∫–ª' in strtext or '—É–±—Ä–∞—Ç—å' in strtext):
        ldict[q] = set(ldict[q]) - bladict[q]
        tdict[q] = {i:g for i,g in tdict[q].items() if tdict[q][i] != ''.join(bladict[q])}
      if ldict[q] != set():
        linkstosub2 = ''.join('. '.join(str(i) for i in j) + '\n' for j in enumerate(ldict[q],start = 1))
        bot.send_message(numb, f"{name} {surname}, –≤—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –∫–∞–Ω–∞–ª—ã.\n{linkstosub2}",reply_markup=markup)
      else:
        with open('Mat.txt','a') as f:
          if 'https' in mesdict[q]:
            mesdict[q] = mesdict[q].replace('https://t.me/','@')
          f.write(f' {mesdict[q]}')
        bot.send_message(-1002039773694, f"{name} {surname}, —Å—Å—ã–ª–∫–∞ {mesdict[q]} –¥–æ–±–∞–≤–ª–µ–Ω–∞!",reply_markup=markup)
        hdict[q].append(mesdict[q])
        print(hdict)
        with open('hist.json','w') as l:
            json.dump(hdict,l)
        del ldict[q], flagdict[q], mesdict[q], timed[q]
        limit[q] = 4
        limit={i:i2-1 for i,i2 in limit.items() if i2 != 1}
  elif checklink(x,q):
    bot.delete_message(message.chat.id,message.message_id)
    bot.send_message(-1002039773694, f"{name} {surname}, –ø–æ—Å–ª–µ —Å—Å—ã–ª–∫–∏ –Ω—É–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—ã.",reply_markup=markup)
  elif message.text == "–ü—Ä–∞–≤–∏–ª–∞":
    bot.delete_message(chat_id=-1002039773694, message_id=y)
    bot.send_message(-1002039773694, '–í—ã –≤ —á–∞—Ç–µ üöÄ–í–ó–ê–ò–ú–ù–´–ï –í–°–¢–£–ü–õ–ï–ù–ò–Ø –ù–ê –ö–ê–ù–ê–õ–´ 3|3üöÄ\n'
                          '\n'
                          '–ó–¥–µ—Å—å –º—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã –¥—Ä—É–≥ –¥—Ä—É–≥–∞.\n\n'
                          '–£—á–∞—Å—Ç–∏–µ –≤ –ª–µ–Ω—Ç–µ —á–∞—Ç–∞ –ë–ï–°–ü–õ–ê–¢–ù–û–ï.\n'
                          '\n'
                          '–†–∞–±–æ—Ç–∞–µ–º 3 —á–µ—Ä–µ–∑ 3 + –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ ùìëùì§ùûü.\n\n'
                          '–í–∑–∞–º–µ–Ω –º—ã –ø—Ä–æ—Å–∏–º, –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∏ –∫–∞–Ω–∞–ª—ã-ùìëùì§ùûü.\n'
                          '\n'
                          '–ß–µ–º –±–æ–ª—å—à–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –≤–∞—à–µ–º –∫–∞–Ω–∞–ª–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—å –≤–∞—à –∫–∞–Ω–∞–ª –≤ –ª–µ–Ω—Ç–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ \n'
                          '\n'
                          'üëáüèªüëáüèªüëá\n'
                          '\n'
                          '‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è\n'
                          '\n'
                          '–í —á–∞—Ç–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–û–¢ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã\n'
                          '\n'
        '‚úÖ–†–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∏ –°–ö–†–ò–ù –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—Å–∞–ª—Å—è\n'
        '\n'
        '‚úÖ–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É –º–æ–∂–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑ —á–µ—Ä–µ–∑ 3 —á—É–∂–∏–µ —Å—Å—ã–ª–∫–∏ –∏ –¥–∞–ª–µ–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª –∏–∑ —Ç—Ä—ë—Ö, —á—Ç–æ –±—É–¥–µ—Ç –≤—ã—à–µ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–∏\n\n'
        '‚úÖ–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –ø—Ä–∏—Å–ª–∞—Ç—å –°–ö–†–ò–ù —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —á–∞—Ç\n'
        '\n'
        '‚ùó–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è —Ä–∞–∑–º–µ—â–∞—Ç—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É –∏ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞,–∑–∞ –æ—Ç–ø–∏—Å–∫–∏ –±–∞–Ω.\n'
        '\n'
        )
  else:
    if message.from_user.username != 'dianamayskaia':
        bot.delete_message(chat_id=-1002039773694, message_id=y)
        bot.send_message(-1002039773694, f"{name} {surname}, —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∏ —Å–∫—Ä–∏–Ω –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—Å–∞–ª—Å—è! –ò—Å–ø—Ä–∞–≤—å—Ç–µ—Å—å!",reply_markup=markup)
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(e)